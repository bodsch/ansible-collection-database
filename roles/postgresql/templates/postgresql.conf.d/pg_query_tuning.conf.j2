#jinja2: trim_blocks: True, lstrip_blocks: True
# {{ ansible_managed }}

#------------------------------------------------------------------------------
# QUERY TUNING
#------------------------------------------------------------------------------

{% if postgresql_config_query_tuning | bodsch.core.type == "dict" %}
  {% set query_tuning = postgresql_config_query_tuning %}
# - Planner Method Configuration -
  {% if query_tuning.enable_async_append is defined and
        query_tuning.enable_async_append | string | length > 0 %}
enable_async_append                 = {{ query_tuning.enable_async_append | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_bitmapscan is defined and
        query_tuning.enable_bitmapscan | string | length > 0 %}
enable_bitmapscan                   = {{ query_tuning.enable_bitmapscan | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_gathermerge is defined and
        query_tuning.enable_gathermerge | string | length > 0 %}
enable_gathermerge                  = {{ query_tuning.enable_gathermerge | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_hashagg is defined and
        query_tuning.enable_hashagg | string | length > 0 %}
enable_hashagg                      = {{ query_tuning.enable_hashagg | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_hashjoin is defined and
        query_tuning.enable_hashjoin | string | length > 0 %}
enable_hashjoin                     = {{ query_tuning.enable_hashjoin | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_incremental_sort is defined and
        query_tuning.enable_incremental_sort | string | length > 0 %}
enable_incremental_sort             = {{ query_tuning.enable_incremental_sort | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_indexscan is defined and
        query_tuning.enable_indexscan | string | length > 0 %}
enable_indexscan                    = {{ query_tuning.enable_indexscan | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_indexonlyscan is defined and
        query_tuning.enable_indexonlyscan | string | length > 0 %}
enable_indexonlyscan                = {{ query_tuning.enable_indexonlyscan | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_material is defined and
        query_tuning.enable_material | string | length > 0 %}
enable_material                     = {{ query_tuning.enable_material | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_memoize is defined and
        query_tuning.enable_memoize | string | length > 0 %}
enable_memoize                      = {{ query_tuning.enable_memoize | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_mergejoin is defined and
        query_tuning.enable_mergejoin | string | length > 0 %}
enable_mergejoin                    = {{ query_tuning.enable_mergejoin | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_nestloop is defined and
        query_tuning.enable_nestloop | string | length > 0 %}
enable_nestloop                     = {{ query_tuning.enable_nestloop | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_parallel_append is defined and
        query_tuning.enable_parallel_append | string | length > 0 %}
enable_parallel_append              = {{ query_tuning.enable_parallel_append | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_parallel_hash is defined and
        query_tuning.enable_parallel_hash | string | length > 0 %}
enable_parallel_hash                = {{ query_tuning.enable_parallel_hash | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_partition_pruning is defined and
        query_tuning.enable_partition_pruning | string | length > 0 %}
enable_partition_pruning            = {{ query_tuning.enable_partition_pruning | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_partitionwise_join is defined and
        query_tuning.enable_partitionwise_join | string | length > 0 %}
enable_partitionwise_join           = {{ query_tuning.enable_partitionwise_join | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_partitionwise_aggregate is defined and
        query_tuning.enable_partitionwise_aggregate | string | length > 0 %}
enable_partitionwise_aggregate      = {{ query_tuning.enable_partitionwise_aggregate | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_presorted_aggregate is defined and
        query_tuning.enable_presorted_aggregate | string | length > 0 %}
enable_presorted_aggregate          = {{ query_tuning.enable_presorted_aggregate | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_seqscan is defined and
        query_tuning.enable_seqscan | string | length > 0 %}
enable_seqscan                      = {{ query_tuning.enable_seqscan | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_sort is defined and
        query_tuning.enable_sort | string | length > 0 %}
enable_sort                         = {{ query_tuning.enable_sort | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_tidscan is defined and
        query_tuning.enable_tidscan | string | length > 0 %}
enable_tidscan                      = {{ query_tuning.enable_tidscan | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.enable_group_by_reordering is defined and
        query_tuning.enable_group_by_reordering | string | length > 0 %}
enable_group_by_reordering          = {{ query_tuning.enable_group_by_reordering | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
# - Planner Cost Constants -
  {% if query_tuning.seq_page_cost is defined and
        query_tuning.seq_page_cost | string | length > 0 %}
seq_page_cost                       = {{ query_tuning.seq_page_cost }}
  {% endif %}
  {% if query_tuning.random_page_cost is defined and
        query_tuning.random_page_cost | string | length > 0 %}
random_page_cost                    = {{ query_tuning.random_page_cost }}
  {% endif %}
  {% if query_tuning.cpu_tuple_cost is defined and
        query_tuning.cpu_tuple_cost | string | length > 0 %}
cpu_tuple_cost                      = {{ query_tuning.cpu_tuple_cost }}
  {% endif %}
  {% if query_tuning.cpu_index_tuple_cost is defined and
        query_tuning.cpu_index_tuple_cost | string | length > 0 %}
cpu_index_tuple_cost                = {{ query_tuning.cpu_index_tuple_cost }}
  {% endif %}
  {% if query_tuning.cpu_operator_cost is defined and
        query_tuning.cpu_operator_cost | string | length > 0 %}
cpu_operator_cost                   = {{ query_tuning.cpu_operator_cost }}
  {% endif %}
  {% if query_tuning.parallel_setup_cost is defined and
        query_tuning.parallel_setup_cost | string | length > 0 %}
parallel_setup_cost                 = {{ query_tuning.parallel_setup_cost }}
  {% endif %}
  {% if query_tuning.parallel_tuple_cost is defined and
        query_tuning.parallel_tuple_cost | string | length > 0 %}
parallel_tuple_cost                 = {{ query_tuning.parallel_tuple_cost }}
  {% endif %}
  {% if query_tuning.min_parallel_table_scan_size is defined and
        query_tuning.min_parallel_table_scan_size | string | length > 0 %}
min_parallel_table_scan_size        = {{ query_tuning.min_parallel_table_scan_size }}
  {% endif %}
  {% if query_tuning.min_parallel_index_scan_size is defined and
        query_tuning.min_parallel_index_scan_size | string | length > 0 %}
min_parallel_index_scan_size        = {{ query_tuning.min_parallel_index_scan_size }}
  {% endif %}
  {% if query_tuning.effective_cache_size is defined and
        query_tuning.effective_cache_size | string | length > 0 %}
effective_cache_size                = {{ query_tuning.effective_cache_size }}
  {% endif %}
  {% if query_tuning.jit_above_cost is defined and
        query_tuning.jit_above_cost | string | length > 0 %}
jit_above_cost                      = {{ query_tuning.jit_above_cost }}
  {% endif %}
  {% if query_tuning.jit_inline_above_cost is defined and
        query_tuning.jit_inline_above_cost | string | length > 0 %}
jit_inline_above_cost               = {{ query_tuning.jit_inline_above_cost }}
  {% endif %}
  {% if query_tuning.jit_optimize_above_cost is defined and
        query_tuning.jit_optimize_above_cost | string | length > 0 %}
jit_optimize_above_cost             = {{ query_tuning.jit_optimize_above_cost }}
  {% endif %}
# - Genetic Query Optimizer -
  {% if query_tuning.geqo is defined and
        query_tuning.geqo | string | length > 0 %}
geqo                                = {{ query_tuning.geqo | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.geqo_threshold is defined and
        query_tuning.geqo_threshold | string | length > 0 %}
geqo_threshold                      = {{ query_tuning.geqo_threshold }}
  {% endif %}
  {% if query_tuning.geqo_effort is defined and
        query_tuning.geqo_effort | string | length > 0 %}
geqo_effort                         = {{ query_tuning.geqo_effort }}
  {% endif %}
  {% if query_tuning.geqo_pool_size is defined and
        query_tuning.geqo_pool_size | string | length > 0 %}
geqo_pool_size                      = {{ query_tuning.geqo_pool_size }}
  {% endif %}
  {% if query_tuning.geqo_generations is defined and
        query_tuning.geqo_generations | string | length > 0 %}
geqo_generations                    = {{ query_tuning.geqo_generations }}
  {% endif %}
  {% if query_tuning.geqo_selection_bias is defined and
        query_tuning.geqo_selection_bias | string | length > 0 %}
geqo_selection_bias                 = {{ query_tuning.geqo_selection_bias }}
  {% endif %}
  {% if query_tuning.geqo_seed is defined and
        query_tuning.geqo_seed | string | length > 0 %}
geqo_seed                           = {{ query_tuning.geqo_seed }}
  {% endif %}
# - Other Planner Options -
  {% if query_tuning.default_statistics_target is defined and
        query_tuning.default_statistics_target | string | length > 0 %}
default_statistics_target           = {{ query_tuning.default_statistics_target }}
  {% endif %}
  {% if query_tuning.constraint_exclusion is defined and
        query_tuning.constraint_exclusion | string | length > 0 %}
    {% if query_tuning.constraint_exclusion | bodsch.core.type == "str" and
          query_tuning.constraint_exclusion == "partition" %}
constraint_exclusion                = partition
    {% elif query_tuning.constraint_exclusion | bodsch.core.type == "bool" %}
constraint_exclusion                = {{ query_tuning.constraint_exclusion | bodsch.core.config_bool(true_as="on", false_as="off") }}
    {% endif %}
  {% endif %}
  {% if query_tuning.cursor_tuple_fraction is defined and
        query_tuning.cursor_tuple_fraction | string | length > 0 %}
cursor_tuple_fraction               = {{ query_tuning.cursor_tuple_fraction }}
  {% endif %}
  {% if query_tuning.from_collapse_limit is defined and
        query_tuning.from_collapse_limit | string | length > 0 %}
from_collapse_limit                 = {{ query_tuning.from_collapse_limit }}
  {% endif %}
  {% if query_tuning.jit is defined and
        query_tuning.jit | string | length > 0 %}
jit                                 = {{ query_tuning.jit | bodsch.core.config_bool(true_as="on", false_as="off") }}
  {% endif %}
  {% if query_tuning.join_collapse_limit is defined and
        query_tuning.join_collapse_limit | string | length > 0 %}
join_collapse_limit                 = {{ query_tuning.join_collapse_limit }}
  {% endif %}
  {% if query_tuning.plan_cache_mode is defined and
        query_tuning.plan_cache_mode | string | length > 0 and
        query_tuning.plan_cache_mode in ["auto", "force_generic_plan", "force_custom_plan"] %}
plan_cache_mode                     = {{ query_tuning.plan_cache_mode }}
  {% endif %}
  {% if query_tuning.recursive_worktable_factor is defined and
        query_tuning.recursive_worktable_factor | string | length > 0 %}
recursive_worktable_factor          = {{ query_tuning.recursive_worktable_factor }}
  {% endif %}
{% endif %}
{#
# - Planner Method Configuration -

#enable_async_append = on
#enable_bitmapscan = on
#enable_gathermerge = on
#enable_hashagg = on
#enable_hashjoin = on
#enable_incremental_sort = on
#enable_indexscan = on
#enable_indexonlyscan = on
#enable_material = on
#enable_memoize = on
#enable_mergejoin = on
#enable_nestloop = on
#enable_parallel_append = on
#enable_parallel_hash = on
#enable_partition_pruning = on
#enable_partitionwise_join = off
#enable_partitionwise_aggregate = off
#enable_presorted_aggregate = on
#enable_seqscan = on
#enable_sort = on
#enable_tidscan = on
#enable_group_by_reordering = on

# - Planner Cost Constants -

#seq_page_cost = 1.0                    # measured on an arbitrary scale
#random_page_cost = 4.0                 # same scale as above
#cpu_tuple_cost = 0.01                  # same scale as above
#cpu_index_tuple_cost = 0.005           # same scale as above
#cpu_operator_cost = 0.0025             # same scale as above
#parallel_setup_cost = 1000.0           # same scale as above
#parallel_tuple_cost = 0.1              # same scale as above
#min_parallel_table_scan_size = 8MB
#min_parallel_index_scan_size = 512kB
#effective_cache_size = 4GB

#jit_above_cost = 100000                # perform JIT compilation if available
                                        # and query more expensive than this;
                                        # -1 disables
#jit_inline_above_cost = 500000         # inline small functions if query is
                                        # more expensive than this; -1 disables
#jit_optimize_above_cost = 500000       # use expensive JIT optimizations if
                                        # query is more expensive than this;
                                        # -1 disables

# - Genetic Query Optimizer -

#geqo = on
#geqo_threshold = 12
#geqo_effort = 5                        # range 1-10
#geqo_pool_size = 0                     # selects default based on effort
#geqo_generations = 0                   # selects default based on effort
#geqo_selection_bias = 2.0              # range 1.5-2.0
#geqo_seed = 0.0                        # range 0.0-1.0

# - Other Planner Options -

#default_statistics_target = 100        # range 1-10000
#constraint_exclusion = partition       # on, off, or partition
#cursor_tuple_fraction = 0.1            # range 0.0-1.0
#from_collapse_limit = 8
#jit = on                               # allow JIT compilation
#join_collapse_limit = 8                # 1 disables collapsing of explicit
                                        # JOIN clauses
#plan_cache_mode = auto                 # auto, force_generic_plan or
                                        # force_custom_plan
#recursive_worktable_factor = 10.0      # range 0.001-1000000
#}
