---

- name: detect available postgresql version
  bodsch.core.package_version:
    state: available
    package_name: "{{ postgresql_server }}"
    # repository: "{{ 'MariaDB' if ansible_os_family | lower == 'redhat' and postgresql_use_external_repo else '' }}"
  register: package_version

- name: define postgresql version
  ansible.builtin.set_fact:
    postgresql_version: "{{ package_version.available.full_version }}"
  when:
    - package_version is defined
    - package_version.available is defined
    - package_version.available.full_version is defined

- name: define postgresql short version
  ansible.builtin.set_fact:
    postgresql_short_version: "{{ package_version.available.platform_version }}"
  when:
    - package_version is defined
    - package_version.available is defined
    - package_version.available.platform_version is defined

- name: assert missing postgresql_version
  ansible.builtin.assert:
    that:
      - postgresql_version | default("") | string | length != 0
    msg: postgresql_version is missing
    quiet: true

- name: postgresql version
  ansible.builtin.debug:
    msg:
      - "postgresql version: {{ postgresql_short_version }} - {{ postgresql_version }}"

- name: check postgresql pid file
  ansible.builtin.wait_for:
    path: "{{ postgresql_config_connections.unix.socket.directories[0] | default('/run/postgresql') }}"
    state: present
    delay: 2
    timeout: 120
    msg: "Timeout to find {{ postgresql_config_connections.unix.socket.directories[0] | default('/run/postgresql') }}"
  ignore_errors: false

# - name: re-include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
#   ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
#   vars:
#     params:
#       paths:
#         - "vars"
#       files:
#         # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
#         - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
#         # eg. archlinux-systemd / archlinux-openrc
#         - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
#         # eg. artixlinux
#         - "{{ ansible_distribution | lower | replace(' ', '') }}.yml"
#         # eg. debian / ubuntu / centos / oraclelinux
#         - "{{ ansible_distribution | lower }}.yml"
#         # eg. redhat / debian / archlinux
#         - "{{ ansible_os_family | lower }}.yml"
#         - default.yml
#       skip: true

...
