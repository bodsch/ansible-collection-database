---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. artixlinux
        - "{{ ansible_distribution | lower | replace(' ', '') }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        - default.yml
      skip: true

- name: detect if postgresql installed
  ansible.builtin.stat:
    path: /usr/bin/postgres
    get_checksum: false
    get_mime: false
  register: postgresql_binary_file

- name: define postgresql_installed if postgresql installed
  ansible.builtin.set_fact:
    postgresql_installed: "{{ postgresql_binary_file.stat.exists }}"
  when:
    - postgresql_binary_file is defined
    - postgresql_binary_file.stat is defined

- name: install dependecies
  ansible.builtin.package:
    name: "{{ postgresql_dependencies }}"
    state: present
  when:
    - postgresql_installed

- name: pg conn
  become: true
  become_user: postgres
  bodsch.database.postgres_connection:
  register: pg_connection

...
