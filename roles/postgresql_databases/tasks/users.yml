---

- name: Ensure PostgreSQL users are present.
  community.postgresql.postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password | default(omit) }}"
    login_host: "{{ item.login_host | default('localhost') }}"
    login_password: "{{ item.login_password | default(omit) }}"
    login_user: "{{ item.login_user | default(postgresql_user) }}"
    login_unix_socket: "{{ item.login_unix_socket | default(postgresql_config_connections.unix.socket.directories[0] | default('/run/postgresql')) }}"
    port: "{{ item.port | default(omit) }}"
  loop: "{{ postgresql_users }}"
  loop_control:
    label: "{{ item.name }}, state: {{ item.state | default('present') }}"
  no_log: "{{ postgresql_log_security.suppress_user_log | default('true') }}"
  become: true
  become_user: "{{ postgresql_user }}"
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true
  environment:
    PGOPTIONS: "{{ (postgresql_config_authentication.password_encryption == 'scram-sha-256') | ternary('-c password_encryption=scram-sha-256', '') }}"
